/*
 * NiFi Rest Api
 *
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * API version: 1.13.2
 * Contact: dev@nifi.apache.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifi

import (
	"encoding/json"
)

// StartVersionControlRequestEntity struct for StartVersionControlRequestEntity
type StartVersionControlRequestEntity struct {
	VersionedFlow        *VersionedFlowDTO `json:"versionedFlow,omitempty"`
	ProcessGroupRevision *RevisionDTO      `json:"processGroupRevision,omitempty"`
	// Acknowledges that this node is disconnected to allow for mutable requests to proceed.
	DisconnectedNodeAcknowledged *bool `json:"disconnectedNodeAcknowledged,omitempty"`
}

// NewStartVersionControlRequestEntity instantiates a new StartVersionControlRequestEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStartVersionControlRequestEntity() *StartVersionControlRequestEntity {
	this := StartVersionControlRequestEntity{}
	return &this
}

// NewStartVersionControlRequestEntityWithDefaults instantiates a new StartVersionControlRequestEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStartVersionControlRequestEntityWithDefaults() *StartVersionControlRequestEntity {
	this := StartVersionControlRequestEntity{}
	return &this
}

// GetVersionedFlow returns the VersionedFlow field value if set, zero value otherwise.
func (o *StartVersionControlRequestEntity) GetVersionedFlow() VersionedFlowDTO {
	if o == nil || o.VersionedFlow == nil {
		var ret VersionedFlowDTO
		return ret
	}
	return *o.VersionedFlow
}

// GetVersionedFlowOk returns a tuple with the VersionedFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVersionControlRequestEntity) GetVersionedFlowOk() (*VersionedFlowDTO, bool) {
	if o == nil || o.VersionedFlow == nil {
		return nil, false
	}
	return o.VersionedFlow, true
}

// HasVersionedFlow returns a boolean if a field has been set.
func (o *StartVersionControlRequestEntity) HasVersionedFlow() bool {
	if o != nil && o.VersionedFlow != nil {
		return true
	}

	return false
}

// SetVersionedFlow gets a reference to the given VersionedFlowDTO and assigns it to the VersionedFlow field.
func (o *StartVersionControlRequestEntity) SetVersionedFlow(v VersionedFlowDTO) {
	o.VersionedFlow = &v
}

// GetProcessGroupRevision returns the ProcessGroupRevision field value if set, zero value otherwise.
func (o *StartVersionControlRequestEntity) GetProcessGroupRevision() RevisionDTO {
	if o == nil || o.ProcessGroupRevision == nil {
		var ret RevisionDTO
		return ret
	}
	return *o.ProcessGroupRevision
}

// GetProcessGroupRevisionOk returns a tuple with the ProcessGroupRevision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVersionControlRequestEntity) GetProcessGroupRevisionOk() (*RevisionDTO, bool) {
	if o == nil || o.ProcessGroupRevision == nil {
		return nil, false
	}
	return o.ProcessGroupRevision, true
}

// HasProcessGroupRevision returns a boolean if a field has been set.
func (o *StartVersionControlRequestEntity) HasProcessGroupRevision() bool {
	if o != nil && o.ProcessGroupRevision != nil {
		return true
	}

	return false
}

// SetProcessGroupRevision gets a reference to the given RevisionDTO and assigns it to the ProcessGroupRevision field.
func (o *StartVersionControlRequestEntity) SetProcessGroupRevision(v RevisionDTO) {
	o.ProcessGroupRevision = &v
}

// GetDisconnectedNodeAcknowledged returns the DisconnectedNodeAcknowledged field value if set, zero value otherwise.
func (o *StartVersionControlRequestEntity) GetDisconnectedNodeAcknowledged() bool {
	if o == nil || o.DisconnectedNodeAcknowledged == nil {
		var ret bool
		return ret
	}
	return *o.DisconnectedNodeAcknowledged
}

// GetDisconnectedNodeAcknowledgedOk returns a tuple with the DisconnectedNodeAcknowledged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVersionControlRequestEntity) GetDisconnectedNodeAcknowledgedOk() (*bool, bool) {
	if o == nil || o.DisconnectedNodeAcknowledged == nil {
		return nil, false
	}
	return o.DisconnectedNodeAcknowledged, true
}

// HasDisconnectedNodeAcknowledged returns a boolean if a field has been set.
func (o *StartVersionControlRequestEntity) HasDisconnectedNodeAcknowledged() bool {
	if o != nil && o.DisconnectedNodeAcknowledged != nil {
		return true
	}

	return false
}

// SetDisconnectedNodeAcknowledged gets a reference to the given bool and assigns it to the DisconnectedNodeAcknowledged field.
func (o *StartVersionControlRequestEntity) SetDisconnectedNodeAcknowledged(v bool) {
	o.DisconnectedNodeAcknowledged = &v
}

func (o StartVersionControlRequestEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VersionedFlow != nil {
		toSerialize["versionedFlow"] = o.VersionedFlow
	}
	if o.ProcessGroupRevision != nil {
		toSerialize["processGroupRevision"] = o.ProcessGroupRevision
	}
	if o.DisconnectedNodeAcknowledged != nil {
		toSerialize["disconnectedNodeAcknowledged"] = o.DisconnectedNodeAcknowledged
	}
	return json.Marshal(toSerialize)
}

type NullableStartVersionControlRequestEntity struct {
	value *StartVersionControlRequestEntity
	isSet bool
}

func (v NullableStartVersionControlRequestEntity) Get() *StartVersionControlRequestEntity {
	return v.value
}

func (v *NullableStartVersionControlRequestEntity) Set(val *StartVersionControlRequestEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableStartVersionControlRequestEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableStartVersionControlRequestEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStartVersionControlRequestEntity(val *StartVersionControlRequestEntity) *NullableStartVersionControlRequestEntity {
	return &NullableStartVersionControlRequestEntity{value: val, isSet: true}
}

func (v NullableStartVersionControlRequestEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStartVersionControlRequestEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
