/*
 * NiFi Rest Api
 *
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * API version: 1.13.2
 * Contact: dev@nifi.apache.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifi

import (
	"encoding/json"
)

// FlowBreadcrumbDTO struct for FlowBreadcrumbDTO
type FlowBreadcrumbDTO struct {
	// The id of the group.
	Id *string `json:"id,omitempty"`
	// The id of the group.
	Name                      *string                       `json:"name,omitempty"`
	VersionControlInformation *VersionControlInformationDTO `json:"versionControlInformation,omitempty"`
}

// NewFlowBreadcrumbDTO instantiates a new FlowBreadcrumbDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlowBreadcrumbDTO() *FlowBreadcrumbDTO {
	this := FlowBreadcrumbDTO{}
	return &this
}

// NewFlowBreadcrumbDTOWithDefaults instantiates a new FlowBreadcrumbDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlowBreadcrumbDTOWithDefaults() *FlowBreadcrumbDTO {
	this := FlowBreadcrumbDTO{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FlowBreadcrumbDTO) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowBreadcrumbDTO) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FlowBreadcrumbDTO) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FlowBreadcrumbDTO) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FlowBreadcrumbDTO) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowBreadcrumbDTO) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FlowBreadcrumbDTO) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FlowBreadcrumbDTO) SetName(v string) {
	o.Name = &v
}

// GetVersionControlInformation returns the VersionControlInformation field value if set, zero value otherwise.
func (o *FlowBreadcrumbDTO) GetVersionControlInformation() VersionControlInformationDTO {
	if o == nil || o.VersionControlInformation == nil {
		var ret VersionControlInformationDTO
		return ret
	}
	return *o.VersionControlInformation
}

// GetVersionControlInformationOk returns a tuple with the VersionControlInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowBreadcrumbDTO) GetVersionControlInformationOk() (*VersionControlInformationDTO, bool) {
	if o == nil || o.VersionControlInformation == nil {
		return nil, false
	}
	return o.VersionControlInformation, true
}

// HasVersionControlInformation returns a boolean if a field has been set.
func (o *FlowBreadcrumbDTO) HasVersionControlInformation() bool {
	if o != nil && o.VersionControlInformation != nil {
		return true
	}

	return false
}

// SetVersionControlInformation gets a reference to the given VersionControlInformationDTO and assigns it to the VersionControlInformation field.
func (o *FlowBreadcrumbDTO) SetVersionControlInformation(v VersionControlInformationDTO) {
	o.VersionControlInformation = &v
}

func (o FlowBreadcrumbDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.VersionControlInformation != nil {
		toSerialize["versionControlInformation"] = o.VersionControlInformation
	}
	return json.Marshal(toSerialize)
}

type NullableFlowBreadcrumbDTO struct {
	value *FlowBreadcrumbDTO
	isSet bool
}

func (v NullableFlowBreadcrumbDTO) Get() *FlowBreadcrumbDTO {
	return v.value
}

func (v *NullableFlowBreadcrumbDTO) Set(val *FlowBreadcrumbDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowBreadcrumbDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowBreadcrumbDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowBreadcrumbDTO(val *FlowBreadcrumbDTO) *NullableFlowBreadcrumbDTO {
	return &NullableFlowBreadcrumbDTO{value: val, isSet: true}
}

func (v NullableFlowBreadcrumbDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowBreadcrumbDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
