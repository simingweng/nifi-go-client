/*
 * NiFi Rest Api
 *
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * API version: 1.13.2
 * Contact: dev@nifi.apache.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifi

import (
	"encoding/json"
)

// AccessPolicySummaryDTO struct for AccessPolicySummaryDTO
type AccessPolicySummaryDTO struct {
	// The id of the component.
	Id *string `json:"id,omitempty"`
	// The ID of the corresponding component that is under version control
	VersionedComponentId *string `json:"versionedComponentId,omitempty"`
	// The id of parent process group of this component if applicable.
	ParentGroupId *string      `json:"parentGroupId,omitempty"`
	Position      *PositionDTO `json:"position,omitempty"`
	// The resource for this access policy.
	Resource *string `json:"resource,omitempty"`
	// The action associated with this access policy.
	Action             *string                   `json:"action,omitempty"`
	ComponentReference *ComponentReferenceEntity `json:"componentReference,omitempty"`
	// Whether this policy is configurable.
	Configurable *bool `json:"configurable,omitempty"`
}

// NewAccessPolicySummaryDTO instantiates a new AccessPolicySummaryDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessPolicySummaryDTO() *AccessPolicySummaryDTO {
	this := AccessPolicySummaryDTO{}
	return &this
}

// NewAccessPolicySummaryDTOWithDefaults instantiates a new AccessPolicySummaryDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessPolicySummaryDTOWithDefaults() *AccessPolicySummaryDTO {
	this := AccessPolicySummaryDTO{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AccessPolicySummaryDTO) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPolicySummaryDTO) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AccessPolicySummaryDTO) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AccessPolicySummaryDTO) SetId(v string) {
	o.Id = &v
}

// GetVersionedComponentId returns the VersionedComponentId field value if set, zero value otherwise.
func (o *AccessPolicySummaryDTO) GetVersionedComponentId() string {
	if o == nil || o.VersionedComponentId == nil {
		var ret string
		return ret
	}
	return *o.VersionedComponentId
}

// GetVersionedComponentIdOk returns a tuple with the VersionedComponentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPolicySummaryDTO) GetVersionedComponentIdOk() (*string, bool) {
	if o == nil || o.VersionedComponentId == nil {
		return nil, false
	}
	return o.VersionedComponentId, true
}

// HasVersionedComponentId returns a boolean if a field has been set.
func (o *AccessPolicySummaryDTO) HasVersionedComponentId() bool {
	if o != nil && o.VersionedComponentId != nil {
		return true
	}

	return false
}

// SetVersionedComponentId gets a reference to the given string and assigns it to the VersionedComponentId field.
func (o *AccessPolicySummaryDTO) SetVersionedComponentId(v string) {
	o.VersionedComponentId = &v
}

// GetParentGroupId returns the ParentGroupId field value if set, zero value otherwise.
func (o *AccessPolicySummaryDTO) GetParentGroupId() string {
	if o == nil || o.ParentGroupId == nil {
		var ret string
		return ret
	}
	return *o.ParentGroupId
}

// GetParentGroupIdOk returns a tuple with the ParentGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPolicySummaryDTO) GetParentGroupIdOk() (*string, bool) {
	if o == nil || o.ParentGroupId == nil {
		return nil, false
	}
	return o.ParentGroupId, true
}

// HasParentGroupId returns a boolean if a field has been set.
func (o *AccessPolicySummaryDTO) HasParentGroupId() bool {
	if o != nil && o.ParentGroupId != nil {
		return true
	}

	return false
}

// SetParentGroupId gets a reference to the given string and assigns it to the ParentGroupId field.
func (o *AccessPolicySummaryDTO) SetParentGroupId(v string) {
	o.ParentGroupId = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *AccessPolicySummaryDTO) GetPosition() PositionDTO {
	if o == nil || o.Position == nil {
		var ret PositionDTO
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPolicySummaryDTO) GetPositionOk() (*PositionDTO, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *AccessPolicySummaryDTO) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given PositionDTO and assigns it to the Position field.
func (o *AccessPolicySummaryDTO) SetPosition(v PositionDTO) {
	o.Position = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *AccessPolicySummaryDTO) GetResource() string {
	if o == nil || o.Resource == nil {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPolicySummaryDTO) GetResourceOk() (*string, bool) {
	if o == nil || o.Resource == nil {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *AccessPolicySummaryDTO) HasResource() bool {
	if o != nil && o.Resource != nil {
		return true
	}

	return false
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *AccessPolicySummaryDTO) SetResource(v string) {
	o.Resource = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *AccessPolicySummaryDTO) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPolicySummaryDTO) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *AccessPolicySummaryDTO) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *AccessPolicySummaryDTO) SetAction(v string) {
	o.Action = &v
}

// GetComponentReference returns the ComponentReference field value if set, zero value otherwise.
func (o *AccessPolicySummaryDTO) GetComponentReference() ComponentReferenceEntity {
	if o == nil || o.ComponentReference == nil {
		var ret ComponentReferenceEntity
		return ret
	}
	return *o.ComponentReference
}

// GetComponentReferenceOk returns a tuple with the ComponentReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPolicySummaryDTO) GetComponentReferenceOk() (*ComponentReferenceEntity, bool) {
	if o == nil || o.ComponentReference == nil {
		return nil, false
	}
	return o.ComponentReference, true
}

// HasComponentReference returns a boolean if a field has been set.
func (o *AccessPolicySummaryDTO) HasComponentReference() bool {
	if o != nil && o.ComponentReference != nil {
		return true
	}

	return false
}

// SetComponentReference gets a reference to the given ComponentReferenceEntity and assigns it to the ComponentReference field.
func (o *AccessPolicySummaryDTO) SetComponentReference(v ComponentReferenceEntity) {
	o.ComponentReference = &v
}

// GetConfigurable returns the Configurable field value if set, zero value otherwise.
func (o *AccessPolicySummaryDTO) GetConfigurable() bool {
	if o == nil || o.Configurable == nil {
		var ret bool
		return ret
	}
	return *o.Configurable
}

// GetConfigurableOk returns a tuple with the Configurable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPolicySummaryDTO) GetConfigurableOk() (*bool, bool) {
	if o == nil || o.Configurable == nil {
		return nil, false
	}
	return o.Configurable, true
}

// HasConfigurable returns a boolean if a field has been set.
func (o *AccessPolicySummaryDTO) HasConfigurable() bool {
	if o != nil && o.Configurable != nil {
		return true
	}

	return false
}

// SetConfigurable gets a reference to the given bool and assigns it to the Configurable field.
func (o *AccessPolicySummaryDTO) SetConfigurable(v bool) {
	o.Configurable = &v
}

func (o AccessPolicySummaryDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.VersionedComponentId != nil {
		toSerialize["versionedComponentId"] = o.VersionedComponentId
	}
	if o.ParentGroupId != nil {
		toSerialize["parentGroupId"] = o.ParentGroupId
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.Resource != nil {
		toSerialize["resource"] = o.Resource
	}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.ComponentReference != nil {
		toSerialize["componentReference"] = o.ComponentReference
	}
	if o.Configurable != nil {
		toSerialize["configurable"] = o.Configurable
	}
	return json.Marshal(toSerialize)
}

type NullableAccessPolicySummaryDTO struct {
	value *AccessPolicySummaryDTO
	isSet bool
}

func (v NullableAccessPolicySummaryDTO) Get() *AccessPolicySummaryDTO {
	return v.value
}

func (v *NullableAccessPolicySummaryDTO) Set(val *AccessPolicySummaryDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessPolicySummaryDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessPolicySummaryDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessPolicySummaryDTO(val *AccessPolicySummaryDTO) *NullableAccessPolicySummaryDTO {
	return &NullableAccessPolicySummaryDTO{value: val, isSet: true}
}

func (v NullableAccessPolicySummaryDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessPolicySummaryDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
