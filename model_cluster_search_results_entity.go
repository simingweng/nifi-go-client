/*
 * NiFi Rest Api
 *
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * API version: 1.13.2
 * Contact: dev@nifi.apache.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifi

import (
	"encoding/json"
)

// ClusterSearchResultsEntity struct for ClusterSearchResultsEntity
type ClusterSearchResultsEntity struct {
	NodeResults *[]NodeSearchResultDTO `json:"nodeResults,omitempty"`
}

// NewClusterSearchResultsEntity instantiates a new ClusterSearchResultsEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterSearchResultsEntity() *ClusterSearchResultsEntity {
	this := ClusterSearchResultsEntity{}
	return &this
}

// NewClusterSearchResultsEntityWithDefaults instantiates a new ClusterSearchResultsEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterSearchResultsEntityWithDefaults() *ClusterSearchResultsEntity {
	this := ClusterSearchResultsEntity{}
	return &this
}

// GetNodeResults returns the NodeResults field value if set, zero value otherwise.
func (o *ClusterSearchResultsEntity) GetNodeResults() []NodeSearchResultDTO {
	if o == nil || o.NodeResults == nil {
		var ret []NodeSearchResultDTO
		return ret
	}
	return *o.NodeResults
}

// GetNodeResultsOk returns a tuple with the NodeResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSearchResultsEntity) GetNodeResultsOk() (*[]NodeSearchResultDTO, bool) {
	if o == nil || o.NodeResults == nil {
		return nil, false
	}
	return o.NodeResults, true
}

// HasNodeResults returns a boolean if a field has been set.
func (o *ClusterSearchResultsEntity) HasNodeResults() bool {
	if o != nil && o.NodeResults != nil {
		return true
	}

	return false
}

// SetNodeResults gets a reference to the given []NodeSearchResultDTO and assigns it to the NodeResults field.
func (o *ClusterSearchResultsEntity) SetNodeResults(v []NodeSearchResultDTO) {
	o.NodeResults = &v
}

func (o ClusterSearchResultsEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NodeResults != nil {
		toSerialize["nodeResults"] = o.NodeResults
	}
	return json.Marshal(toSerialize)
}

type NullableClusterSearchResultsEntity struct {
	value *ClusterSearchResultsEntity
	isSet bool
}

func (v NullableClusterSearchResultsEntity) Get() *ClusterSearchResultsEntity {
	return v.value
}

func (v *NullableClusterSearchResultsEntity) Set(val *ClusterSearchResultsEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterSearchResultsEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterSearchResultsEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterSearchResultsEntity(val *ClusterSearchResultsEntity) *NullableClusterSearchResultsEntity {
	return &NullableClusterSearchResultsEntity{value: val, isSet: true}
}

func (v NullableClusterSearchResultsEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterSearchResultsEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
